{
  "FastAPI paths clave": {
    "scope": "python",
    "prefix": "fpathsclave",
    "body": [
      "\"\"\"",
      "${1:Modulos} v3, rutas (paths)",
      "\"\"\"",
      "from fastapi import APIRouter, HTTPException, status",
      "from fastapi_pagination.ext.sqlalchemy import paginate",
      "",
      "from lib.database import DatabaseSession",
      "from lib.exceptions import MyAnyError",
      "from lib.fastapi_pagination_custom_page import CustomPage, custom_page_success_false",
      "",
      "from ...core.permisos.models import Permiso",
      "from ..usuarios.authentications import CurrentUser",
      "",
      "from .crud import get_${2:plural}, get_${3:singular}_with_clave",
      "from .schemas import ${4:EsquemaOut}, One${4:EsquemaOut}",
      "",
      "${2:plural} = APIRouter(prefix=\"/v3/${2:plural}\", tags=[\"categoria\"])",
      "",
      "",
      "@${2:plural}.get(\"\", response_model=CustomPage[${4:EsquemaOut}])",
      "async def listado_${2:plural}(",
      "\tcurrent_user: CurrentUser,",
      "\tdb: DatabaseSession,",
      "):",
      "\t\"\"\"Listado de ${5:descripcion}\"\"\"",
      "\tif current_user.permissions.get(\"${8:MODULO}\", 0) < Permiso.VER:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\tresultados = get_${2:plural}(db)",
      "\texcept MyAnyError as error:",
      "\t\treturn custom_page_success_false(error)",
      "\treturn paginate(resultados)",
      "",
      "",
      "@${2:plural}.get(\"/{${6:singular_clave}}\", response_model=One${4:EsquemaOut})",
      "async def detalle_${3:singular}(",
      "\tcurrent_user: CurrentUser,",
      "\tdb: DatabaseSession,",
      "\t${6:singular_clave}: str,",
      "):",
      "\t\"\"\"Detalle de una ${7:singular} a partir de su clave\"\"\"",
      "\tif current_user.permissions.get(\"${8:MODULO}\", 0) < Permiso.VER:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\t${3:singular} = get_${3:singular}_with_clave(db, ${6:singular_clave})",
      "\texcept MyAnyError as error:",
      "\t\treturn One${4:EsquemaOut}(success=False, message=str(error))",
      "\treturn One${4:EsquemaOut}.from_orm(${3:singular})",
      ""
    ],
    "description": "Contenido para paths.py con clave"
  },
  "FastAPI paths id": {
    "scope": "python",
    "prefix": "fpathsid",
    "body": [
      "\"\"\"",
      "${1:Modulos} v3, rutas (paths)",
      "\"\"\"",
      "from fastapi import APIRouter, HTTPException, status",
      "from fastapi_pagination.ext.sqlalchemy import paginate",
      "",
      "from lib.database import DatabaseSession",
      "from lib.exceptions import MyAnyError",
      "from lib.fastapi_pagination_custom_page import CustomPage, custom_page_success_false",
      "",
      "from ...core.permisos.models import Permiso",
      "from ..usuarios.authentications import CurrentUser",
      "",
      "from .crud import get_${2:plural}, get_${3:singular}",
      "from .schemas import ${4:EsquemaOut}, One${4:EsquemaOut}",
      "",
      "${2:plural} = APIRouter(prefix=\"/v3/${2:plural}\", tags=[\"categoria\"])",
      "",
      "",
      "@${2:plural}.get(\"\", response_model=CustomPage[${4:EsquemaOut}])",
      "async def listado_${2:plural}(",
      "\tcurrent_user: CurrentUser,",
      "\tdb: DatabaseSession,",
      "):",
      "\t\"\"\"Listado de ${5:descripcion}\"\"\"",
      "\tif current_user.permissions.get(\"${8:MODULO}\", 0) < Permiso.VER:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\tresultados = get_${2:plural}(db)",
      "\texcept MyAnyError as error:",
      "\t\treturn custom_page_success_false(error)",
      "\treturn paginate(resultados)",
      "",
      "",
      "@${2:plural}.get(\"/{${3:singular_id}}\", response_model=One${4:EsquemaOut})",
      "async def detalle_${3:singular}(",
      "\tcurrent_user: CurrentUser,",
      "\tdb: DatabaseSession,",
      "\t${3:singular_id}: int,",
      "):",
      "\t\"\"\"Detalle de una ${7:singular} a partir de su id\"\"\"",
      "\tif current_user.permissions.get(\"${8:MODULO}\", 0) < Permiso.VER:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\t${3:singular} = get_${3:singular}(db, ${3:singular_id})",
      "\texcept MyAnyError as error:",
      "\t\treturn One${4:EsquemaOut}(success=False, message=str(error))",
      "\treturn One${4:EsquemaOut}.from_orm(${3:singular})",
      ""
    ],
    "description": "Contenido para paths.py con id"
  },
  "FastAPI paths crear": {
    "scope": "python",
    "prefix": "fpathscrear",
    "body": [
      "@${1:plural}.post(\"\", response_model=${2:OneEsquemaOut})",
      "async def crear_${3:singular}(",
      "\tcurrent_user: CurrentUser,",
      "\tdb: DatabaseSession,",
      "\t${3:singular}_in: ${4:EsquemaIn},",
      "):",
      "\t\"\"\"Crear una ${5:descripcion}\"\"\"",
      "\tif current_user.permissions.get(\"${6:MODULO}\", 0) < Permiso.CREAR:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\t${3:singular} = create_${3:singular}(db, ${7:Modelo}(**${3:singular}_in.dict()))",
      "\texcept MyAnyError as error:",
      "\t\treturn ${2:OneEsquemaOut}(success=False, message=str(error))",
      "\trespuesta = ${2:OneEsquemaOut}.from_orm(${3:singular})",
      "\trespuesta.message = \"${8:descripcion} creada correctamente\"",
      "\treturn respuesta"
    ],
    "description": "Contenido para paths.py crear"
  },
  "FastAPI paths modificar": {
    "scope": "python",
    "prefix": "fpathsmodificar",
    "body": [
      "@${1:plural}.put(\"/{${2:singular_id}}\", response_model=${3:OneEsquemaOut})",
      "async def modificar_${4:singular}(",
      "\tcurrent_user: CurrentUser,",
      "\tdb: DatabaseSession,",
      "\t${2:singular_id}: int,",
      "\t${5:singular_in}: ${6:EsquemaIn},",
      "):",
      "\t\"\"\"Modificar una ${7:descripcion}\"\"\"",
      "\tif current_user.permissions.get(\"${8:MODULO}\", 0) < Permiso.MODIFICAR:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\t${4:singular} = update_${4:singular}(db, ${2:singular_id}, ${8:Modelo}(**${5:singular_in}.dict()))",
      "\texcept MyAnyError as error:",
      "\t\treturn ${3:OneEsquemaOut}(success=False, message=str(error))",
      "\trespuesta = ${3:OneEsquemaOut}.from_orm(${4:singular})",
      "\trespuesta.message = \"${9:descripcion} modificada correctamente\"",
      "\treturn respuesta"
    ],
    "description": "Contenido para paths.py modificar"
  },
  "FastAPI paths borrar": {
    "scope": "python",
    "prefix": "fpathsborrar",
    "body": [
      "@${1:plural}.delete(\"/{${2:singular_id}}\", response_model=${3:OneEsquemaOut})",
      "async def borrar_${4:singular}(",
      "\tcurrent_user: CurrentUser,",
      "\tdb: DatabaseSession,",
      "\t${2:singular_id}: int,",
      "):",
      "\t\"\"\"Borrar una ${5:descripcion}\"\"\"",
      "\tif current_user.permissions.get(\"${6:MODULO}\", 0) < Permiso.BORRAR:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\t${4:singular} = delete_${4:singular}(db, ${2:singular_id})",
      "\texcept MyAnyError as error:",
      "\t\treturn ${3:OneEsquemaOut}(success=False, message=str(error))",
      "\trespuesta = ${3:OneEsquemaOut}.from_orm(${4:singular})",
      "\trespuesta.message = \"${7:descripcion} borrada correctamente\"",
      "\treturn respuesta"
    ],
    "description": "Contenido para paths.py borrar"
  }
}
